---
# apps/v1/DaemonSet ws-daemon
apiVersion: apps/v1
kind: DaemonSet
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: ws-daemon
  name: ws-daemon
  namespace: gitpod
spec:
  selector:
    matchLabels:
      app: gitpod
      component: ws-daemon
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: 8526602828b522869c3a65b19adbc918a565241db3f07e2841b559bbfa2e5abb
        seccomp.security.alpha.kubernetes.io/shiftfs-module-loader: unconfined
      creationTimestamp: null
      labels:
        app: gitpod
        component: ws-daemon
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    values:
                      - aks-central-90269204-vmss00001z
                    operator: In
      containers:
        - args:
            - run
            - --config
            - /config/config.json
          env:
            - name: GITPOD_DOMAIN
              value: gitpod.central.dev.cloud.ilab-nlb.de
            - name: GITPOD_INSTALLATION_SHORTNAME
              value: default
            - name: GITPOD_REGION
              value: local
            - name: HOST_URL
              value: https://gitpod.central.dev.cloud.ilab-nlb.de
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBE_DOMAIN
              value: svc.cluster.local
            - name: LOG_LEVEL
              value: trace
            - name: JAEGER_DISABLED
              value: "true"
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: eu.gcr.io/gitpod-core-dev/build/ws-daemon:commit-cf5a72cd19f33a8d4c7ccf0301adc936905194f7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /live
              port: 9501
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ws-daemon
          ports:
            - containerPort: 8080
              hostPort: 8080
              name: rpc
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /ready
              port: 9501
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 2
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 500m
              memory: 4Gi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /mnt/workingarea
              mountPropagation: Bidirectional
              name: working-area
            - mountPath: /config
              name: config
            - mountPath: /mnt/containerd.sock
              name: containerd-socket
            - mountPath: /mnt/node0
              name: node-fs0
            - mountPath: /mnt/mounts
              mountPropagation: HostToContainer
              name: node-mounts
              readOnly: true
            - mountPath: /mnt/node-cgroups
              mountPropagation: HostToContainer
              name: node-cgroups
            - mountPath: /mnt/hosts
              name: node-hosts
            - mountPath: /certs
              name: tls-certs
            - mountPath: /mnt/sync-tmp
              name: gcloud-tmp
        - args:
            - --logtostderr
            - --insecure-listen-address=[$(IP)]:9500
            - --upstream=http://127.0.0.1:9500/
          env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: quay.io/brancz/kube-rbac-proxy:v0.12.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 9500
              name: metrics
          resources:
            requests:
              cpu: 1m
              memory: 30Mi
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
        - command:
            - /app/ready-probe-labeler
            - --label=gitpod.io/ws-daemon_ready_ns_gitpod
            - --probe-url=http://localhost:9501/ready
          env:
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          image: eu.gcr.io/gitpod-core-dev/build/ws-daemon:commit-cf5a72cd19f33a8d4c7ccf0301adc936905194f7
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /app/ready-probe-labeler
                  - --label=gitpod.io/ws-daemon_ready_ns_gitpod
                  - --shutdown
          name: node-labeler
          resources: {}
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      hostPID: true
      initContainers:
        - args:
            - "exec {BASH_XTRACEFD}>&1 # this causes 'set -x' to write to stdout insted of stderr\nset -euExo pipefail\nsystemctl status kube-container-runtime-monitor.service || true\nif [ \"$(systemctl is-active kube-container-runtime-monitor.service)\" == \"active\" ]\nthen\n\techo \"kube-container-runtime-monitor.service is active\"\n\tsystemctl stop kube-container-runtime-monitor.service\n\tsystemctl disable kube-container-runtime-monitor.service\n\tsystemctl status kube-container-runtime-monitor.service || true\nelse\n\techo \"kube-container-runtime-monitor.service is not active, not doing anything\"\nfi\n"
          command:
            - /usr/bin/nsenter
            - -t
            - "1"
            - -a
            - /bin/bash
            - -c
          image: docker.io/library/ubuntu:20.04
          name: disable-kube-health-monitor
          resources: {}
          securityContext:
            privileged: true
            procMount: Default
        - command:
            - /bin/sh
            - -c
            - cp -f /installer/workspace_default.json /mnt/dst/workspace_default_release-2022.09.2.3.json
          image: eu.gcr.io/gitpod-core-dev/build/seccomp-profile-installer:commit-cf5a72cd19f33a8d4c7ccf0301adc936905194f7
          name: seccomp-profile-installer
          resources: {}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /mnt/dst
              name: hostseccomp
        - command:
            - sh
            - -c
            - "(\n\techo \"running sysctls\" &&\n\tsysctl -w net.core.somaxconn=4096 &&\n\tsysctl -w \"net.ipv4.ip_local_port_range=5000 65000\" &&\n\tsysctl -w \"net.ipv4.tcp_tw_reuse=1\" &&\n\tsysctl -w fs.inotify.max_user_watches=1000000 &&\n\tsysctl -w \"kernel.dmesg_restrict=1\" &&\n\tsysctl -w vm.unprivileged_userfaultfd=0\n) && echo \"done!\" || echo \"failed!\"\n"
          image: eu.gcr.io/gitpod-core-dev/build/ws-daemon:commit-cf5a72cd19f33a8d4c7ccf0301adc936905194f7
          name: sysctl
          resources: {}
          securityContext:
            privileged: true
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccountName: ws-daemon
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/disk-pressure
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/memory-pressure
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/out-of-disk
          operator: Exists
      volumes:
        - hostPath:
            path: /
          name: hostfs
        - hostPath:
            path: /var/gitpod/workspaces
            type: DirectoryOrCreate
          name: working-area
        - name: tls-certs
          secret:
            secretName: ws-daemon-tls
        - configMap:
            name: ws-daemon
          name: config
        - hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
          name: containerd-socket
        - hostPath:
            path: /var/lib/containerd/io.containerd.runtime.v2.task/k8s.io
            type: Directory
          name: node-fs0
        - hostPath:
            path: /proc/mounts
            type: File
          name: node-mounts
        - hostPath:
            path: /sys/fs/cgroup
            type: Directory
          name: node-cgroups
        - hostPath:
            path: /etc/hosts
            type: File
          name: node-hosts
        - hostPath:
            path: /usr/src
            type: Directory
          name: node-linux-src
        - hostPath:
            path: /var/lib/kubelet/seccomp
          name: hostseccomp
        - hostPath:
            path: /var/gitpod/tmp/backup
            type: DirectoryOrCreate
          name: gcloud-tmp
  updateStrategy: {}
status:
  currentNumberScheduled: 0
  desiredNumberScheduled: 0
  numberMisscheduled: 0
  numberReady: 0
