---
# apps/v1/Deployment server
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: server
  name: server
  namespace: gitpod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: 181a68d348deacbd3efa782450ffc802fc6b3febfcc442bd828a6562033bf8ca
      creationTimestamp: null
      labels:
        app: gitpod
        component: server
      name: server
      namespace: gitpod
    spec:
      containers:
        - env:
            - name: GITPOD_DOMAIN
              value: gitpod.devops.hub.cloud.ilab-nlb.de
            - name: GITPOD_INSTALLATION_SHORTNAME
              value: default
            - name: GITPOD_REGION
              value: local
            - name: HOST_URL
              value: https://gitpod.devops.hub.cloud.ilab-nlb.de
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBE_DOMAIN
              value: svc.cluster.local
            - name: LOG_LEVEL
              value: trace
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: mysql
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: mysql
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysql
            - name: DB_ENCRYPTION_KEYS
              valueFrom:
                secretKeyRef:
                  key: encryptionKeys
                  name: mysql
            - name: JAEGER_DISABLED
              value: "true"
            - name: MESSAGEBUS_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: rabbitmq
            - name: MESSAGEBUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: rabbitmq
            - name: MESSAGEBUS_CA
              valueFrom:
                secretKeyRef:
                  key: ca.crt
                  name: messagebus-certificates-secret-core
            - name: MESSAGEBUS_CERT
              valueFrom:
                secretKeyRef:
                  key: tls.crt
                  name: messagebus-certificates-secret-core
            - name: MESSAGEBUS_KEY
              valueFrom:
                secretKeyRef:
                  key: tls.key
                  name: messagebus-certificates-secret-core
            - name: CONFIG_PATH
              value: /config/config.json
            - name: GITPOD_LICENSE_TYPE
              value: gitpod
            - name: IDE_CONFIG_PATH
              value: /ide-config/config.json
            - name: NODE_ENV
              value: production
            - name: SHLVL
              value: "1"
            - name: WSMAN_CFG_MANAGERS
              value: WwogIHsKICAgICJuYW1lIjogImRlZmF1bHQiLAogICAgInVybCI6ICJkbnM6Ly8vd3MtbWFuYWdlcjo4MDgwIiwKICAgICJ0bHMiOiB7CiAgICAgICJjYSI6ICIvd3MtbWFuYWdlci1jbGllbnQtdGxzLWNlcnRzL2NhLmNydCIsCiAgICAgICJjcnQiOiAiL3dzLW1hbmFnZXItY2xpZW50LXRscy1jZXJ0cy90bHMuY3J0IiwKICAgICAgImtleSI6ICIvd3MtbWFuYWdlci1jbGllbnQtdGxzLWNlcnRzL3Rscy5rZXkiCiAgICB9LAogICAgInN0YXRlIjogImF2YWlsYWJsZSIsCiAgICAibWF4U2NvcmUiOiAxMDAsCiAgICAic2NvcmUiOiA1MCwKICAgICJnb3Zlcm4iOiB0cnVlLAogICAgImFkbWlzc2lvbkNvbnN0cmFpbnRzIjogbnVsbAogIH0KXQ==
          image: eu.gcr.io/gitpod-core-dev/build/server:commit-4adbe8a12a23bf0bb9beaf3daec68800a1c37dad
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /live
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 10
          name: server
          ports:
            - containerPort: 3000
              name: http
            - containerPort: 9500
              name: metrics
            - containerPort: 9000
              name: install-admin
            - containerPort: 6060
              name: debug
            - containerPort: 9229
              name: debugnode
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            privileged: false
            runAsUser: 31001
          volumeMounts:
            - mountPath: /config
              name: config
              readOnly: true
            - mountPath: /ide-config
              name: ide-config
              readOnly: true
            - mountPath: /ws-manager-client-tls-certs
              name: ws-manager-client-tls-certs
              readOnly: true
            - mountPath: /twilio-config
              name: twilio-secret-volume
              readOnly: true
        - args:
            - --logtostderr
            - --insecure-listen-address=[$(IP)]:9500
            - --upstream=http://127.0.0.1:9500/
          env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: quay.io/brancz/kube-rbac-proxy:v0.12.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 9500
              name: metrics
          resources:
            requests:
              cpu: 1m
              memory: 30Mi
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
      enableServiceLinks: false
      initContainers:
        - args:
            - -v
            - database
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: mysql
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: mysql
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysql
            - name: DB_ENCRYPTION_KEYS
              valueFrom:
                secretKeyRef:
                  key: encryptionKeys
                  name: mysql
          image: eu.gcr.io/gitpod-core-dev/build/service-waiter:commit-3073cfbd53d1f854de79dd87e4d0d6a9825da114
          name: database-waiter
          resources: {}
          securityContext:
            privileged: false
            runAsUser: 31001
        - args:
            - -v
            - messagebus
          env:
            - name: MESSAGEBUS_USERNAME
              valueFrom:
                secretKeyRef:
                  key: username
                  name: rabbitmq
            - name: MESSAGEBUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: rabbitmq
            - name: MESSAGEBUS_CA
              valueFrom:
                secretKeyRef:
                  key: ca.crt
                  name: messagebus-certificates-secret-core
            - name: MESSAGEBUS_CERT
              valueFrom:
                secretKeyRef:
                  key: tls.crt
                  name: messagebus-certificates-secret-core
            - name: MESSAGEBUS_KEY
              valueFrom:
                secretKeyRef:
                  key: tls.key
                  name: messagebus-certificates-secret-core
          image: eu.gcr.io/gitpod-core-dev/build/service-waiter:commit-3073cfbd53d1f854de79dd87e4d0d6a9825da114
          name: msgbus-waiter
          resources: {}
          securityContext:
            privileged: false
            runAsUser: 31001
      priorityClassName: system-node-critical
      serviceAccountName: server
      volumes:
        - configMap:
            name: server-config
          name: config
        - configMap:
            name: server-ide-config
          name: ide-config
        - name: ws-manager-client-tls-certs
          secret:
            secretName: ws-manager-client-tls
        - name: twilio-secret-volume
          secret:
            optional: true
            secretName: twilio-secret
status: {}
