---
# apps/v1/StatefulSet openvsx-proxy
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: gitpod
    component: openvsx-proxy
  name: openvsx-proxy
  namespace: gitpod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitpod
      component: openvsx-proxy
  serviceName: openvsx-proxy
  template:
    metadata:
      annotations:
        gitpod.io/checksum_config: 23cd08b18c706a2d847297e07a5c18060622d018abc4dc426145e552cc82a8fe
      creationTimestamp: null
      labels:
        app: gitpod
        component: openvsx-proxy
      name: openvsx-proxy
      namespace: gitpod
    spec:
      containers:
        - args:
            - /config/config.json
          env:
            - name: GITPOD_DOMAIN
              value: gitpod.devops.hub.cloud.ilab-nlb.de
            - name: GITPOD_INSTALLATION_SHORTNAME
              value: default
            - name: GITPOD_REGION
              value: local
            - name: HOST_URL
              value: https://gitpod.devops.hub.cloud.ilab-nlb.de
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBE_DOMAIN
              value: svc.cluster.local
            - name: LOG_LEVEL
              value: trace
          image: eu.gcr.io/gitpod-core-dev/build/openvsx-proxy:commit-3073cfbd53d1f854de79dd87e4d0d6a9825da114
          imagePullPolicy: IfNotPresent
          name: openvsx-proxy
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 9500
              name: metrics
          readinessProbe:
            httpGet:
              path: /openvsx-proxy-status
              port: 8080
          resources:
            requests:
              cpu: 1m
              memory: 150Mi
          volumeMounts:
            - mountPath: /config
              name: config
        - command:
            - redis-server
            - /config/redis.conf
          env:
            - name: MASTER
              value: "true"
          image: docker.io/library/redis:6.2
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
            - containerPort: 6379
          resources:
            requests:
              cpu: 1m
              memory: 150Mi
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /data
              name: redis-data
        - args:
            - --logtostderr
            - --insecure-listen-address=[$(IP)]:9500
            - --upstream=http://127.0.0.1:9500/
          env:
            - name: IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: quay.io/brancz/kube-rbac-proxy:v0.12.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 9500
              name: metrics
          resources:
            requests:
              cpu: 1m
              memory: 30Mi
          securityContext:
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
      dnsPolicy: ClusterFirst
      enableServiceLinks: false
      restartPolicy: Always
      serviceAccountName: openvsx-proxy
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            name: openvsx-proxy-config
          name: config
  updateStrategy: {}
  volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        labels:
          app: gitpod
          component: openvsx-proxy
        name: redis-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
      status: {}
